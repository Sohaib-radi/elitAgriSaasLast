# Generated by Django 5.1.7 on 2025-07-10 06:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('banking', '0002_loan'),
        ('core', '0009_alter_invitetoken_farm_alter_person_farm_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('card_type', models.CharField(choices=[('credit', 'Credit Card'), ('debit', 'Debit Card'), ('prepaid', 'Prepaid Card'), ('checkbook', 'Checkbook')], help_text='Type of the card', max_length=20, verbose_name='Card Type')),
                ('card_number', models.CharField(help_text='Card or checkbook number', max_length=50, unique=True, verbose_name='Card Number')),
                ('holder_name', models.CharField(help_text='Name on the card', max_length=255, verbose_name='Holder Name')),
                ('issue_date', models.DateField(help_text='Date when the card was issued', verbose_name='Issue Date')),
                ('expiry_date', models.DateField(blank=True, help_text='Card expiry date', null=True, verbose_name='Expiry Date')),
                ('card_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Limit of the card if applicable', max_digits=14, null=True, verbose_name='Card Limit')),
                ('status', models.CharField(choices=[('active', 'Active'), ('blocked', 'Blocked'), ('expired', 'Expired')], default='active', help_text='Current status of the card', max_length=20, verbose_name='Status')),
                ('note', models.TextField(blank=True, help_text='Optional note about this card', null=True, verbose_name='Note')),
                ('bank', models.ForeignKey(help_text='Bank this card is linked to', on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='banking.bank', verbose_name='Bank')),
            ],
            options={
                'verbose_name': 'Bank Card',
                'verbose_name_plural': 'Bank Cards',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='BankTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('transaction_date', models.DateField(help_text='Date of the transaction', verbose_name='Transaction Date')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=14, verbose_name='Amount')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('fee', 'Fee'), ('interest', 'Interest'), ('loan_payment', 'Loan Payment'), ('loan_disbursement', 'Loan Disbursement')], help_text='Type of transaction', max_length=20, verbose_name='Transaction Type')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('other', 'Other')], help_text='Payment method used for this transaction', max_length=20, verbose_name='Payment Method')),
                ('reference', models.CharField(blank=True, help_text='Transaction reference or description', max_length=255, null=True, verbose_name='Reference')),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('pending', 'Pending'), ('rejected', 'Rejected')], default='confirmed', help_text='Status of the transaction', max_length=20, verbose_name='Status')),
                ('note', models.TextField(blank=True, help_text='Optional note for this transaction', null=True, verbose_name='Note')),
                ('bank', models.ForeignKey(help_text='Bank where the transaction occurred', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='banking.bank', verbose_name='Bank')),
                ('loan', models.ForeignKey(blank=True, help_text='Related loan if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='banking.loan', verbose_name='Related Loan')),
            ],
            options={
                'verbose_name': 'Bank Transaction',
                'verbose_name_plural': 'Bank Transactions',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='Checkbook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('start_number', models.PositiveIntegerField(help_text='Starting check number in this checkbook', verbose_name='Start Check Number')),
                ('end_number', models.PositiveIntegerField(help_text='Ending check number in this checkbook', verbose_name='End Check Number')),
                ('issue_date', models.DateField(help_text='Date when the checkbook was issued', verbose_name='Issue Date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('used', 'Used'), ('closed', 'Closed')], default='active', help_text='Current status of the checkbook', max_length=20, verbose_name='Status')),
                ('note', models.TextField(blank=True, help_text='Optional note about this checkbook', null=True, verbose_name='Note')),
                ('bank', models.ForeignKey(help_text='Bank linked to this checkbook', on_delete=django.db.models.deletion.CASCADE, related_name='checkbooks', to='banking.bank', verbose_name='Bank')),
            ],
            options={
                'verbose_name': 'Checkbook',
                'verbose_name_plural': 'Checkbooks',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('check_number', models.PositiveIntegerField(help_text='Unique number of the check', verbose_name='Check Number')),
                ('issue_date', models.DateField(help_text='Date when the check was issued', verbose_name='Issue Date')),
                ('due_date', models.DateField(help_text='Date when the check should be paid', verbose_name='Due Date')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of the check', max_digits=14, verbose_name='Amount')),
                ('beneficiary_name', models.CharField(help_text='Name of the person or entity receiving the check', max_length=255, verbose_name='Beneficiary Name')),
                ('status', models.CharField(choices=[('issued', 'Issued'), ('cleared', 'Cleared'), ('bounced', 'Bounced'), ('cancelled', 'Cancelled')], default='issued', help_text='Current status of the check', max_length=20, verbose_name='Status')),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid')], default='pending', help_text='Payment status of the check', max_length=20, verbose_name='Payment Status')),
                ('direction', models.CharField(choices=[('incoming', 'Incoming'), ('outgoing', 'Outgoing')], default='outgoing', help_text='Indicates if the check is incoming or outgoing', max_length=10, verbose_name='Direction')),
                ('note', models.TextField(blank=True, help_text='Optional note about this check', null=True, verbose_name='Note')),
                ('transaction', models.ForeignKey(blank=True, help_text='Transaction linked to this check, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checks', to='banking.banktransaction', verbose_name='Linked Transaction')),
                ('checkbook', models.ForeignKey(help_text='Checkbook this check belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='checks', to='banking.checkbook', verbose_name='Checkbook')),
            ],
            options={
                'verbose_name': 'Check',
                'verbose_name_plural': 'Checks',
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='LoanPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(help_text='Date of this payment', verbose_name='Payment Date')),
                ('amount_paid', models.DecimalField(decimal_places=2, help_text='Total amount paid in this payment', max_digits=14, verbose_name='Total Amount Paid')),
                ('principal_paid', models.DecimalField(decimal_places=2, help_text='Principal portion of the payment', max_digits=14, verbose_name='Principal Paid')),
                ('interest_paid', models.DecimalField(decimal_places=2, help_text='Interest portion of the payment', max_digits=14, verbose_name='Interest Paid')),
                ('remaining_balance', models.DecimalField(decimal_places=2, help_text='Remaining balance of the loan after this payment', max_digits=14, verbose_name='Remaining Balance')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('other', 'Other')], default='bank_transfer', help_text='Method used for this payment', max_length=20, verbose_name='Payment Method')),
                ('payment_reference', models.CharField(blank=True, help_text='Reference or receipt number for this payment', max_length=255, null=True, verbose_name='Payment Reference')),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('pending', 'Pending'), ('rejected', 'Rejected')], default='confirmed', help_text='Status of the payment', max_length=20, verbose_name='Status')),
                ('note', models.TextField(blank=True, help_text='Optional note for this payment', null=True, verbose_name='Note')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', related_query_name='%(app_label)s_%(class)s', to='core.farm', verbose_name='Farm')),
                ('loan', models.ForeignKey(help_text='Loan related to this payment', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='banking.loan', verbose_name='Loan')),
            ],
            options={
                'verbose_name': 'Loan Payment',
                'verbose_name_plural': 'Loan Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Reconciliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('reconciled_amount', models.DecimalField(decimal_places=2, help_text='Amount reconciled from the bank transaction', max_digits=14, verbose_name='Reconciled Amount')),
                ('status', models.CharField(choices=[('unmatched', 'Unmatched'), ('partially_matched', 'Partially Matched'), ('fully_matched', 'Fully Matched')], default='unmatched', help_text='Status of the reconciliation', max_length=20, verbose_name='Reconciliation Status')),
                ('reconciliation_date', models.DateField(auto_now_add=True, help_text='Date when the reconciliation was performed', verbose_name='Reconciliation Date')),
                ('note', models.TextField(blank=True, help_text='Optional note about this reconciliation', null=True, verbose_name='Note')),
                ('bank_transaction', models.ForeignKey(help_text='Bank transaction being reconciled', on_delete=django.db.models.deletion.CASCADE, related_name='reconciliations', to='banking.banktransaction', verbose_name='Bank Transaction')),
                ('linked_check', models.ForeignKey(blank=True, help_text='Linked check, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reconciliations', to='banking.check', verbose_name='Linked Check')),
                ('loan_payment', models.ForeignKey(blank=True, help_text='Linked loan payment, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reconciliations', to='banking.loanpayment', verbose_name='Loan Payment')),
            ],
            options={
                'verbose_name': 'Reconciliation',
                'verbose_name_plural': 'Reconciliations',
                'ordering': ['-reconciliation_date'],
            },
        ),
    ]
