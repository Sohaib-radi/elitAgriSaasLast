# Generated by Django 5.1.7 on 2025-04-04 01:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animal_number', models.CharField(db_index=True, help_text='Farm-specific identifier for the animal.', max_length=100, verbose_name='Animal Number')),
                ('international_number', models.CharField(blank=True, db_index=True, help_text='Official registration number (e.g., RFID tag).', max_length=100, null=True, verbose_name='International Number')),
                ('name', models.CharField(blank=True, help_text='Optional nickname for the animal.', max_length=100, null=True, verbose_name='Name')),
                ('species', models.CharField(choices=[('cow', 'Cow'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('camel', 'Camel'), ('chicken', 'Chicken'), ('other', 'Other')], default='other', help_text='The species of the animal (cow, sheep, etc.).', max_length=20, verbose_name='Species')),
                ('breed', models.CharField(blank=True, help_text='Breed of the animal.', max_length=100, null=True, verbose_name='Breed')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], help_text='Gender of the animal.', max_length=10, verbose_name='Gender')),
                ('birth_date', models.DateField(help_text='Date of birth.', verbose_name='Birth Date')),
                ('status', models.CharField(choices=[('pregnant', 'Pregnant'), ('with_baby', 'With Baby'), ('not_pregnant', 'Not Pregnant'), ('healthy', 'Healthy'), ('sick', 'Sick'), ('deceased', 'Deceased')], default='healthy', help_text='Current health or reproductive status.', max_length=20, verbose_name='Status')),
                ('description', models.TextField(blank=True, help_text='Additional notes or remarks.', null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag for animal records.', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnimalBirth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animal_number', models.CharField(db_index=True, help_text='Farm-specific identifier for the newborn.', max_length=100, verbose_name='Animal Number')),
                ('international_number', models.CharField(blank=True, db_index=True, help_text='Official registration number (e.g. RFID tag).', max_length=100, null=True, verbose_name='International Number')),
                ('species', models.CharField(help_text='Species of the newborn (cow, sheep, etc.).', max_length=20, verbose_name='Species')),
                ('gender', models.CharField(help_text='Gender of the newborn.', max_length=10, verbose_name='Gender')),
                ('birth_datetime', models.DateTimeField(help_text='Exact date and time of birth.', verbose_name='Birth Date and Time')),
                ('status', models.CharField(choices=[('healthy', 'Healthy'), ('weak', 'Weak'), ('stillborn', 'Stillborn'), ('died_after_birth', 'Died Shortly After Birth'), ('aborted', 'Aborted'), ('unknown', 'Unknown')], default='healthy', help_text='Status of the newborn at birth.', max_length=30, verbose_name='Birth Status')),
                ('description', models.TextField(blank=True, help_text='Any notes or observations about the birth.', null=True, verbose_name='Description')),
                ('moved_to_animals', models.BooleanField(default=False, help_text='Has the newborn been transferred to the main animal list?', verbose_name='Moved to Animals')),
            ],
            options={
                'verbose_name': 'Animal Birth',
                'verbose_name_plural': 'Animal Births',
                'ordering': ['-birth_datetime'],
            },
        ),
        migrations.CreateModel(
            name='AnimalCustomFieldValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.TextField(verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Animal Custom Field Value',
                'verbose_name_plural': 'Animal Custom Field Values',
            },
        ),
        migrations.CreateModel(
            name='AnimalDeath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('death_datetime', models.DateTimeField(help_text='Date and time of death.', verbose_name='Date and Time')),
                ('reason', models.CharField(blank=True, help_text='Optional cause of death.', max_length=255, null=True, verbose_name='Reason')),
                ('description', models.TextField(blank=True, help_text='Any additional notes.', null=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('archived', 'Archived')], db_index=True, default='pending', help_text='Status of this death record.', max_length=20, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Animal Death',
                'verbose_name_plural': 'Animal Deaths',
                'ordering': ['-death_datetime'],
            },
        ),
        migrations.CreateModel(
            name='AnimalDeathImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='animal/deaths/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Death Image',
                'verbose_name_plural': 'Death Images',
            },
        ),
        migrations.CreateModel(
            name='AnimalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(help_text='Photo of the animal.', upload_to='animal/images/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, help_text='Optional caption or description.', max_length=255, null=True, verbose_name='Caption')),
            ],
            options={
                'verbose_name': 'Animal Image',
                'verbose_name_plural': 'Animal Images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnimalList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, help_text='Name of the list, e.g., Sheep, Cows.', max_length=100, verbose_name='List Name')),
                ('image', models.ImageField(blank=True, help_text='Optional image to visually identify the list.', null=True, upload_to='animal/list-images/', verbose_name='List Image')),
                ('is_active', models.BooleanField(default=True, help_text='Soft delete flag for the list.', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Animal List',
                'verbose_name_plural': 'Animal Lists',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AnimalVaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the vaccine administered.', max_length=200, verbose_name='Vaccine Name')),
                ('date_given', models.DateField(help_text='Date the vaccine was administered.', verbose_name='Date Given')),
                ('valid_until', models.DateField(help_text='Expiry or validity date of the vaccine.', verbose_name='Valid Until')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('given', 'Given'), ('expired', 'Expired'), ('valid', 'Valid')], default='given', help_text='Current status of the vaccination.', max_length=20, verbose_name='Status')),
                ('description', models.TextField(blank=True, help_text='Optional notes or observations.', null=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, help_text='Optional image proof of vaccination.', null=True, upload_to='animal/vaccines/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Animal Vaccine',
                'verbose_name_plural': 'Animal Vaccines',
                'ordering': ['-date_given'],
            },
        ),
        migrations.CreateModel(
            name='CustomListField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Field Name')),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('boolean', 'Yes/No'), ('choice', 'Single Choice'), ('multi_choice', 'Multiple Choice')], default='text', max_length=20, verbose_name='Field Type')),
                ('required', models.BooleanField(default=False, verbose_name='Required')),
                ('options', models.JSONField(blank=True, help_text='Only used for choice/multi_choice fields', null=True, verbose_name='Options')),
            ],
            options={
                'verbose_name': 'Custom Field',
                'verbose_name_plural': 'Custom Fields',
            },
        ),
        migrations.CreateModel(
            name='VaccineRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.CharField(choices=[('cow', 'Cow'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('camel', 'Camel'), ('chicken', 'Chicken'), ('other', 'Other')], help_text='Animal species this recommendation applies to.', max_length=50, verbose_name='Species')),
                ('vaccine_name', models.CharField(help_text='Scientific or commercial name of the vaccine.', max_length=150, verbose_name='Vaccine Name')),
                ('description', models.TextField(blank=True, help_text='Explanation of why and when the vaccine is recommended.', null=True, verbose_name='Description')),
                ('recommended_age_days', models.PositiveIntegerField(help_text='Age in days when the vaccine should be administered.', verbose_name='Recommended Age (Days)')),
                ('repeat_interval_days', models.PositiveIntegerField(blank=True, help_text='How often the vaccine should be repeated (if applicable).', null=True, verbose_name='Repeat Interval (Days)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Vaccine Recommendation',
                'verbose_name_plural': 'Vaccine Recommendations',
            },
        ),
    ]
