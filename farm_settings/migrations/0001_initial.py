# Generated by Django 5.1.7 on 2025-04-04 01:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, help_text='ISO code for the currency, e.g., USD, EUR.', max_length=10, unique=True, verbose_name='Currency Code')),
                ('name', models.CharField(help_text='Full name of the currency.', max_length=100, verbose_name='Currency Name')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FarmCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text="If disabled, this currency won't be usable in new transactions.", verbose_name='Active')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('currency', models.ForeignKey(help_text='Reference to the global currency entity.', on_delete=django.db.models.deletion.CASCADE, related_name='enabled_for_farms', to='farm_settings.currency', verbose_name='Currency')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='core.farm', verbose_name='Farm')),
            ],
            options={
                'verbose_name': 'Farm Currency',
                'verbose_name_plural': 'Farm Currencies',
                'unique_together': {('farm', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='FarmSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_name', models.CharField(blank=True, help_text='The official registered name of the farm/company.', max_length=255, null=True, verbose_name='Legal Name')),
                ('contact_person', models.CharField(blank=True, help_text='Primary contact for the farm (e.g., owner or manager).', max_length=100, null=True, verbose_name='Contact Person')),
                ('email', models.EmailField(blank=True, help_text='Official email address for the farm.', max_length=254, null=True, verbose_name='Email')),
                ('telephone', models.CharField(blank=True, help_text='Primary contact number.', max_length=20, null=True, verbose_name='Telephone')),
                ('whatsapp_number', models.CharField(blank=True, help_text='WhatsApp contact for quick communication.', max_length=20, null=True, verbose_name='WhatsApp Number')),
                ('website', models.URLField(blank=True, help_text='Farm or company website.', null=True, verbose_name='Website')),
                ('location_country', models.CharField(blank=True, help_text='Country where the farm is located.', max_length=100, null=True, verbose_name='Country')),
                ('region', models.CharField(blank=True, help_text='Administrative region or province.', max_length=100, null=True, verbose_name='Region')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitude for mapping and delivery.', max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitude for mapping and delivery.', max_digits=9, null=True, verbose_name='Longitude')),
                ('business_id', models.CharField(blank=True, help_text='Tax registration number or SIRET.', max_length=50, null=True, verbose_name='Business ID')),
                ('tax_id', models.CharField(blank=True, help_text='VAT or fiscal identification number.', max_length=50, null=True, verbose_name='Tax ID')),
                ('license_number', models.CharField(blank=True, help_text='Authorization/license number if applicable.', max_length=50, null=True, verbose_name='License Number')),
                ('description', models.TextField(blank=True, help_text='Short bio or summary about the farm.', null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, help_text='Date the farm was established.', null=True, verbose_name='Start Date')),
                ('default_language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic'), ('fr', 'French'), ('tr', 'Turkish')], default='en', max_length=10, verbose_name='Default Language')),
                ('currency', models.CharField(default='USD', max_length=10, verbose_name='Currency')),
                ('currency_exchange_rate', models.DecimalField(decimal_places=2, default=1.0, max_digits=10, verbose_name='Exchange Rate')),
                ('exchange_rate_updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Exchange Rate Update')),
                ('allow_invites', models.BooleanField(default=True, help_text='Enable or disable inviting new users to the farm.', verbose_name='Allow User Invitations')),
                ('auto_activate_users', models.BooleanField(default=False, help_text='If true, users are active immediately after being invited or registering.', verbose_name='Auto-activate New Users')),
                ('role_mode', models.CharField(choices=[('simple', 'Simple'), ('advanced', 'Advanced')], default='advanced', help_text='Simple: fixed roles. Advanced: granular permissions.', max_length=20, verbose_name='Role Mode')),
                ('enable_email_notifications', models.BooleanField(default=True, verbose_name='Enable Email Notifications')),
                ('low_stock_threshold', models.PositiveIntegerField(default=10, verbose_name='Low Stock Alert Threshold')),
                ('daily_reminder_time', models.TimeField(blank=True, null=True, verbose_name='Daily Reminder Time')),
                ('print_template', models.CharField(default='default', max_length=50, verbose_name='Print Template')),
                ('enable_barcode_printing', models.BooleanField(default=False, verbose_name='Enable Barcode Printing')),
                ('report_format', models.CharField(choices=[('summary', 'Summary'), ('detailed', 'Detailed')], default='summary', max_length=20, verbose_name='Report Format')),
                ('ai_enabled', models.BooleanField(default=False, help_text='Enable AI-based suggestions and task automation.', verbose_name='Enable AI Assistance')),
                ('ai_tasks_enabled', models.JSONField(blank=True, help_text='List of AI-enabled tasks like reports or automation.', null=True, verbose_name='AI Tasks Enabled')),
                ('voice_commands', models.BooleanField(default=False, verbose_name='Enable Voice Commands')),
                ('session_expiry_minutes', models.IntegerField(default=120, verbose_name='Session Timeout (minutes)')),
                ('otp_enabled', models.BooleanField(default=False, verbose_name='Two-Factor Authentication (OTP)')),
                ('guest_mode_duration', models.IntegerField(default=60, help_text='Temporary access mode duration in minutes.', verbose_name='Guest Mode Duration (minutes)')),
                ('multi_farm_enabled', models.BooleanField(default=True, help_text='Allows switching between farms (if authorized).', verbose_name='Enable Multi-Farm Support')),
                ('auto_numbering_enabled', models.BooleanField(default=True, help_text='Automatically number transactions and forms.', verbose_name='Enable Auto Numbering')),
                ('attachment_required', models.BooleanField(default=False, help_text='Force users to attach documents for certain forms.', verbose_name='Require Attachment on Forms')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('farm', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='core.farm', verbose_name='Farm')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(db_index=True, help_text='Date of the rate.', verbose_name='Rate Date')),
                ('rate', models.DecimalField(decimal_places=4, help_text="Value of the currency compared to the farm's base currency.", max_digits=12, verbose_name='Exchange Rate')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('farm_currency', models.ForeignKey(help_text='Farm currency to which this rate belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='farm_settings.farmcurrency', verbose_name='Farm Currency')),
            ],
            options={
                'verbose_name': 'Currency Rate',
                'verbose_name_plural': 'Currency Rates',
                'ordering': ['-date'],
                'unique_together': {('farm_currency', 'date')},
            },
        ),
    ]
